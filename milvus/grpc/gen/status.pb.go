// Code generated by protoc-gen-go. DO NOT EDIT.
// source: status.proto

package milvus_grpc

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ErrorCode int32

const (
	ErrorCode_SUCCESS                 ErrorCode = 0
	ErrorCode_UNEXPECTED_ERROR        ErrorCode = 1
	ErrorCode_CONNECT_FAILED          ErrorCode = 2
	ErrorCode_PERMISSION_DENIED       ErrorCode = 3
	ErrorCode_COLLECTION_NOT_EXISTS   ErrorCode = 4
	ErrorCode_ILLEGAL_ARGUMENT        ErrorCode = 5
	ErrorCode_ILLEGAL_DIMENSION       ErrorCode = 7
	ErrorCode_ILLEGAL_INDEX_TYPE      ErrorCode = 8
	ErrorCode_ILLEGAL_COLLECTION_NAME ErrorCode = 9
	ErrorCode_ILLEGAL_TOPK            ErrorCode = 10
	ErrorCode_ILLEGAL_ROWRECORD       ErrorCode = 11
	ErrorCode_ILLEGAL_VECTOR_ID       ErrorCode = 12
	ErrorCode_ILLEGAL_SEARCH_RESULT   ErrorCode = 13
	ErrorCode_FILE_NOT_FOUND          ErrorCode = 14
	ErrorCode_META_FAILED             ErrorCode = 15
	ErrorCode_CACHE_FAILED            ErrorCode = 16
	ErrorCode_CANNOT_CREATE_FOLDER    ErrorCode = 17
	ErrorCode_CANNOT_CREATE_FILE      ErrorCode = 18
	ErrorCode_CANNOT_DELETE_FOLDER    ErrorCode = 19
	ErrorCode_CANNOT_DELETE_FILE      ErrorCode = 20
	ErrorCode_BUILD_INDEX_ERROR       ErrorCode = 21
	ErrorCode_ILLEGAL_NLIST           ErrorCode = 22
	ErrorCode_ILLEGAL_METRIC_TYPE     ErrorCode = 23
	ErrorCode_OUT_OF_MEMORY           ErrorCode = 24
)

var ErrorCode_name = map[int32]string{
	0:  "SUCCESS",
	1:  "UNEXPECTED_ERROR",
	2:  "CONNECT_FAILED",
	3:  "PERMISSION_DENIED",
	4:  "COLLECTION_NOT_EXISTS",
	5:  "ILLEGAL_ARGUMENT",
	7:  "ILLEGAL_DIMENSION",
	8:  "ILLEGAL_INDEX_TYPE",
	9:  "ILLEGAL_COLLECTION_NAME",
	10: "ILLEGAL_TOPK",
	11: "ILLEGAL_ROWRECORD",
	12: "ILLEGAL_VECTOR_ID",
	13: "ILLEGAL_SEARCH_RESULT",
	14: "FILE_NOT_FOUND",
	15: "META_FAILED",
	16: "CACHE_FAILED",
	17: "CANNOT_CREATE_FOLDER",
	18: "CANNOT_CREATE_FILE",
	19: "CANNOT_DELETE_FOLDER",
	20: "CANNOT_DELETE_FILE",
	21: "BUILD_INDEX_ERROR",
	22: "ILLEGAL_NLIST",
	23: "ILLEGAL_METRIC_TYPE",
	24: "OUT_OF_MEMORY",
}

var ErrorCode_value = map[string]int32{
	"SUCCESS":                 0,
	"UNEXPECTED_ERROR":        1,
	"CONNECT_FAILED":          2,
	"PERMISSION_DENIED":       3,
	"COLLECTION_NOT_EXISTS":   4,
	"ILLEGAL_ARGUMENT":        5,
	"ILLEGAL_DIMENSION":       7,
	"ILLEGAL_INDEX_TYPE":      8,
	"ILLEGAL_COLLECTION_NAME": 9,
	"ILLEGAL_TOPK":            10,
	"ILLEGAL_ROWRECORD":       11,
	"ILLEGAL_VECTOR_ID":       12,
	"ILLEGAL_SEARCH_RESULT":   13,
	"FILE_NOT_FOUND":          14,
	"META_FAILED":             15,
	"CACHE_FAILED":            16,
	"CANNOT_CREATE_FOLDER":    17,
	"CANNOT_CREATE_FILE":      18,
	"CANNOT_DELETE_FOLDER":    19,
	"CANNOT_DELETE_FILE":      20,
	"BUILD_INDEX_ERROR":       21,
	"ILLEGAL_NLIST":           22,
	"ILLEGAL_METRIC_TYPE":     23,
	"OUT_OF_MEMORY":           24,
}

func (x ErrorCode) String() string {
	return proto.EnumName(ErrorCode_name, int32(x))
}

func (ErrorCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_dfe4fce6682daf5b, []int{0}
}

type Status struct {
	ErrorCode            ErrorCode `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3,enum=milvus.grpc.ErrorCode" json:"error_code,omitempty"`
	Reason               string    `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Status) Reset()         { *m = Status{} }
func (m *Status) String() string { return proto.CompactTextString(m) }
func (*Status) ProtoMessage()    {}
func (*Status) Descriptor() ([]byte, []int) {
	return fileDescriptor_dfe4fce6682daf5b, []int{0}
}

func (m *Status) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Status.Unmarshal(m, b)
}
func (m *Status) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Status.Marshal(b, m, deterministic)
}
func (m *Status) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Status.Merge(m, src)
}
func (m *Status) XXX_Size() int {
	return xxx_messageInfo_Status.Size(m)
}
func (m *Status) XXX_DiscardUnknown() {
	xxx_messageInfo_Status.DiscardUnknown(m)
}

var xxx_messageInfo_Status proto.InternalMessageInfo

func (m *Status) GetErrorCode() ErrorCode {
	if m != nil {
		return m.ErrorCode
	}
	return ErrorCode_SUCCESS
}

func (m *Status) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func init() {
	proto.RegisterEnum("milvus.grpc.ErrorCode", ErrorCode_name, ErrorCode_value)
	proto.RegisterType((*Status)(nil), "milvus.grpc.Status")
}

func init() { proto.RegisterFile("status.proto", fileDescriptor_dfe4fce6682daf5b) }

var fileDescriptor_dfe4fce6682daf5b = []byte{
	// 431 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x92, 0x5f, 0x6f, 0xd3, 0x30,
	0x14, 0xc5, 0xe9, 0x18, 0x1d, 0xbd, 0xed, 0xba, 0x5b, 0xaf, 0xff, 0x10, 0x2f, 0x13, 0x4f, 0x13,
	0x0f, 0x7d, 0x00, 0xf1, 0x01, 0x8c, 0x7d, 0xb3, 0x59, 0x38, 0x76, 0x65, 0x3b, 0xac, 0x7b, 0xb2,
	0xc6, 0x16, 0x21, 0x24, 0x20, 0x53, 0xda, 0xf1, 0x81, 0xf8, 0xa4, 0xc8, 0xdd, 0x0c, 0x11, 0x6f,
	0xc9, 0xef, 0xf8, 0xdc, 0x9b, 0x73, 0x62, 0x18, 0x6d, 0x77, 0x37, 0xbb, 0x87, 0xed, 0xea, 0xbe,
	0x6d, 0x76, 0x0d, 0x1b, 0xfe, 0xf8, 0xf6, 0xfd, 0xd7, 0xc3, 0x76, 0xf5, 0xb5, 0xbd, 0xbf, 0x7d,
	0x73, 0x05, 0x7d, 0xbf, 0x17, 0xd9, 0x07, 0x80, 0xba, 0x6d, 0x9b, 0x36, 0xde, 0x36, 0x77, 0xf5,
	0xb2, 0x77, 0xd6, 0x3b, 0x1f, 0xbf, 0x9b, 0xaf, 0x3a, 0x67, 0x57, 0x94, 0x64, 0xd1, 0xdc, 0xd5,
	0x6e, 0x50, 0xe7, 0x47, 0x36, 0x87, 0x7e, 0x5b, 0xdf, 0x6c, 0x9b, 0x9f, 0xcb, 0x83, 0xb3, 0xde,
	0xf9, 0xc0, 0x3d, 0xbd, 0xbd, 0xfd, 0x7d, 0x08, 0x83, 0xbf, 0x06, 0x36, 0x84, 0x23, 0x5f, 0x09,
	0x41, 0xde, 0xe3, 0x33, 0x36, 0x05, 0xac, 0x0c, 0x6d, 0xd6, 0x24, 0x02, 0xc9, 0x48, 0xce, 0x59,
	0x87, 0x3d, 0xc6, 0x60, 0x2c, 0xac, 0x31, 0x24, 0x42, 0x2c, 0xb8, 0xd2, 0x24, 0xf1, 0x80, 0xcd,
	0x60, 0xb2, 0x26, 0x57, 0x2a, 0xef, 0x95, 0x35, 0x51, 0x92, 0x51, 0x24, 0xf1, 0x39, 0x7b, 0x05,
	0x33, 0x61, 0xb5, 0x26, 0x11, 0x12, 0x36, 0x36, 0x44, 0xda, 0x28, 0x1f, 0x3c, 0x1e, 0xa6, 0xd9,
	0x4a, 0x6b, 0xba, 0xe0, 0x3a, 0x72, 0x77, 0x51, 0x95, 0x64, 0x02, 0xbe, 0x48, 0x73, 0x32, 0x95,
	0xaa, 0x24, 0x93, 0xc6, 0xe1, 0x11, 0x9b, 0x03, 0xcb, 0x58, 0x19, 0x49, 0x9b, 0x18, 0xae, 0xd7,
	0x84, 0x2f, 0xd9, 0x6b, 0x58, 0x64, 0xde, 0xdd, 0xc3, 0x4b, 0xc2, 0x01, 0x43, 0x18, 0x65, 0x31,
	0xd8, 0xf5, 0x27, 0x84, 0xee, 0x74, 0x67, 0xaf, 0x1c, 0x09, 0xeb, 0x24, 0x0e, 0xbb, 0xf8, 0x33,
	0x89, 0x60, 0x5d, 0x54, 0x12, 0x47, 0xe9, 0xe3, 0x33, 0xf6, 0xc4, 0x9d, 0xb8, 0x8c, 0x8e, 0x7c,
	0xa5, 0x03, 0x1e, 0xa7, 0x0a, 0x0a, 0xa5, 0x69, 0x9f, 0xa8, 0xb0, 0x95, 0x91, 0x38, 0x66, 0x27,
	0x30, 0x2c, 0x29, 0xf0, 0xdc, 0xc9, 0x49, 0xda, 0x2f, 0xb8, 0xb8, 0xa4, 0x4c, 0x90, 0x2d, 0x61,
	0x2a, 0xb8, 0x49, 0x26, 0xe1, 0x88, 0x07, 0x8a, 0x85, 0xd5, 0x92, 0x1c, 0x4e, 0x52, 0xc0, 0xff,
	0x14, 0xa5, 0x09, 0x59, 0xc7, 0x21, 0x49, 0xd3, 0x3f, 0xc7, 0x69, 0xc7, 0x91, 0x95, 0xe4, 0x98,
	0xa6, 0x30, 0x1f, 0x2b, 0xa5, 0xe5, 0x53, 0x51, 0x8f, 0x3f, 0x6d, 0xc6, 0x26, 0x70, 0x9c, 0xc3,
	0x18, 0xad, 0x7c, 0xc0, 0x39, 0x5b, 0xc0, 0x69, 0x46, 0x25, 0x05, 0xa7, 0xc4, 0x63, 0xab, 0x8b,
	0x74, 0xd6, 0x56, 0x21, 0xda, 0x22, 0x96, 0x54, 0x5a, 0x77, 0x8d, 0xcb, 0x2f, 0xfd, 0xfd, 0x8d,
	0x7c, 0xff, 0x27, 0x00, 0x00, 0xff, 0xff, 0xf2, 0x0d, 0x45, 0xac, 0xa1, 0x02, 0x00, 0x00,
}
